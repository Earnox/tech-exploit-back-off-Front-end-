import { useNavigate } from 'react-router-dom';
import Network from '../utils/Network';
import React, { useState, useEffect } from 'react';

function Groups() {
  const navigate = useNavigate();
  const [selectedGroup, setSelectedGroup] = useState(null);
  const [selectedPermission, setSelectedPermission] = useState(null);
  const [groupData, setgroupDataData] = useState([]);
  const API = new Network();

  async function getGroups() {
    try {
      const data = await API.get(`/groups`);
      setgroupDataData(data.data);
    } catch (e) {
      console.log(e);
    }
  }

  const [allPermissions, setAllPermissions] = useState([]);

  useEffect(() => {
    getGroups();
    const fetchAllPermissions = async () => {
      try {
        const response = await API.get('/groups/allPermissions');
        if (response && response.data) {
          setAllPermissions(response.data);
        }
      } catch (error) {
        console.error('Error fetching all permissions:', error);
      }
    };

    fetchAllPermissions();
  }, []);

  async function handelDeletePerm(auth) {
    // TODO: Implement the delete logic
    console.log(auth);
  }

  async function handelCreatePerm(groupId, auth) {
    if (!groupId || !auth) return;

    try {
      const response = await API.post('/perm', {
        groupId: groupId,
        permissions: [auth],
      });
      if (response && response.data && response.code) {
        console.log('Permission added:', auth);
        getGroups();
      } else {
        console.error('Error adding permission:', response.data.message);
      }
    } catch (error) {
      console.error('Error adding permission:', error);
    }
  }

  return (
    <div className="bg-gray-100 p-8 min-h-screen">
      <h1 className="text-3xl mb-4 font-bold">Groups</h1>
      <div className="mb-6">
        <span className="bg-blue-500 text-white p-2 rounded">Add Group</span>
        <button className="ml-2 bg-green-500 p-2 rounded text-white">+</button>
      </div>
      {groupData.map((group) => (
        <div key={group.id} className="bg-white p-4 rounded mb-4 shadow">
          <h2 className="text-xl mb-2">{group.name}</h2>
          <div className="grid grid-cols-2 gap-4">
            {group.authorizations.map((auth) => (
              <div
                key={auth}
                className="flex items-center justify-between p-2 bg-gray-200 rounded">
                <p>{auth}</p>
                <button
                  className="bg-red-500 p-1 rounded text-white"
                  onClick={() => handelDeletePerm(auth)}>
                  Del
                </button>
              </div>
            ))}
          </div>
          <div className="mt-4">
            <select
              className="border p-2 rounded"
              onChange={(e) => setSelectedPermission(e.target.value)}>
              <option>Select a permission</option>
              {allPermissions.map((perm) => (
                <option key={perm} value={perm}>
                  {perm}
                </option>
              ))}
            </select>
            <button
              className="ml-2 bg-blue-500 p-2 rounded text-white"
              onClick={() => handelCreatePerm(group.id, selectedPermission)}>
              Add to Group
            </button>
          </div>
        </div>
      ))}
    </div>
  );
}

export default Groups;
