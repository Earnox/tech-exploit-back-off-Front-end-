import React, { useState } from 'react';
import { API_BASE_URL } from '../apiConfig';
import axios from 'axios';
import { validateEmail } from '../utils/validators';

function Login() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState(null);
  const [errorMsg, setErrorMsg] = useState(null);

  function handleEmailChange(e) {
    setEmail(e.target.value);
  }

  function handlePasswordChange(e) {
    setPassword(e.target.value);
  }

  function validateInputs() {
    if (!email) {
      setError('Email is required');
      return false;
    }

    if (!validateEmail(email)) {
      setError('Email is invalid');
      return false;
    }

    if (!password) {
      setError('Password is required');
      return false;
    }

    setError(null);
    return true;
  }
  // API call

  async function loginUser(email, password) {
    try {
      const response = await axios.post(API_BASE_URL + '/login', {
        email,
        password,
      });
      console.log(response.data);
      return response.data;
    } catch (error) {
      if (error.response) {
        setErrorMsg(error.response.data.message);
        // La requête a été faite et le serveur a répondu avec un status code
        // qui est en dehors de la plage 2xx
        throw new Error(error.response.data.message);
      } else {
        // Une erreur est survenue en configurant la requête
        throw new Error('Error setting up request');
      }
    }
  }

  // Handle submit
  async function handleSubmit(e) {
    e.preventDefault();

    const isValid = validateInputs();
    if (!isValid) return;

    try {
      // Call API
      const user = await loginUser(email, password);

      // Successful login

      // props.onLogin(user);
    } catch (err) {
      // Error from API
      setError(err.message);
    }
  }
  return (
    <form onSubmit={handleSubmit}>
      <input type="email" value={email} onChange={handleEmailChange} />
      <input type="password" value={password} onChange={handlePasswordChange} />
      <button type="submit">Login</button>
      {error && <p>{error}</p>}
    </form>
  );
}

export default Login;
