import React, { useState, useEffect } from 'react';
import { FaUserPlus } from 'react-icons/fa';
import Network from '../shared/Network';
import { ApiResponse, Group } from '../types';
import Button from '../components/atoms/Button';
import { useNavigate } from 'react-router-dom';

// TODO: need to green message when user is created

//TODO: need to add requied field and message
export function UserCreationPage() {
  const nav = useNavigate();
  const [groups, setGroups] = useState<Group[]>([]); // Moved the state outside of useEffect

  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [matricule, setMatricule] = useState('');
  const [selectedGroup, setSelectedGroup] = useState('');
  const API = new Network();
  async function fetchGroups() {
    const response: ApiResponse = await API.get('/groups');
    console.log('reponse l27 creationPage :', response);

    if (response.data) {
      const groupData = response.data;
      if (Array.isArray(groupData)) {
        setGroups(groupData);
        console.log('groups l31 creationPage :', groupData);
      }
    }
  }
  useEffect(() => {
    // Fetch the list of groups from the backend to populate the dropdown

    fetchGroups();
  }, []);

  async function handleSubmit(event: any) {
    event.preventDefault();
    try {
      await API.post('/users', {
        name: name,
        email: email,
        groupId: selectedGroup,
        password: password,
        matricule: matricule,
      });
      nav('/UserManagement');
    } catch (error) {}
  }

  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold mb-4 flex items-center">
        <FaUserPlus className="mr-2" /> Add New User
      </h1>
      <form onSubmit={handleSubmit}>
        <div className="mb-4">
          <label className="block mb-2">Name</label>
          <input
            type="text"
            className="w-full p-2 border rounded-md"
            value={name}
            onChange={(e) => setName(e.target.value)}
            required
          />
        </div>
        <div className="mb-4">
          <label className="block mb-2">Email</label>
          <input
            type="email"
            className="w-full p-2 border rounded-md"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
          />
        </div>
        <div className="mb-4">
          <label className="block mb-2">Matricule</label>
          <input
            type="text"
            className="w-full p-2 border rounded-md"
            value={matricule}
            onChange={(e) => setMatricule(e.target.value)}
            placeholder="Enter matricule"
          />
        </div>
        <div className="mb-4">
          <label className="block mb-2">Password</label>
          <input
            type="password"
            className="w-full p-2 border rounded-md"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            required
          />
        </div>
        <div className="mb-4">
          <label className="block mb-2">Group</label>
          <select
            className="w-full p-2 border rounded-md"
            value={selectedGroup}
            onChange={(e) => setSelectedGroup(e.target.value)}
            required>
            <option value="">Select a group</option>
            {groups.map((group: Group) => (
              <option key={group.id} value={group.id}>
                {group.name}
              </option>
            ))}
          </select>
        </div>
        <Button
          text="Create User"
          type="submit"
          className=" flex p-2 bg-blue-600 text-white rounded-md"
          disabled={false}
          icons="add user"
        />
      </form>
    </div>
  );
}

export default UserCreationPage;
