import { createSlice } from "@reduxjs/toolkit";
import jwtDecode from "jwt-decode";

/**
 * En fait si tu veux, ici ma fonction va venir récupérer le token dans le localStorage
 * et le décoder pour récupérer les informations de l'utilisateur.
 * Ca permet de rendre notre store totalement autonome, et d'être sur que partout dans l'app
 * on ait accès aux informations de l'utilisateur, sans jamaias avoir à aller les chercher.
 */
const getInitialStateFromJWT = () => {
  const jwtToken = localStorage.getItem('jwt') as string;
  const hasToken = jwtToken && jwtToken !== 'undefined';
  if (hasToken) {
    const user = jwtDecode(jwtToken) as any;
    if (user) {
      return {
        user: {
          id: user?.id,
          name: user?.name,
          group: user?.group,
          email: user?.email,
          isConnected: true,
        }
      };
    }
  }
  return {
    user: {
      id: null,
      name: null,
      group: null,
      email: null,
      isConnected: false,
    }
  };
};

export const userSlice = createSlice({
  name: 'user',
  initialState: getInitialStateFromJWT(),
  reducers: {
    updateUser: (state, action) => {
      const { id, name, email, group } = action.payload;
      if (id) {
        state.user.id = id;
        state.user.isConnected = true;
      };
      if (name) state.user.name = name;
      if (email) state.user.email = email;
      if (group) state.user.group = group;
    },
    logout: (state) => {
      state.user.id = null;
      state.user.name = null;
      state.user.group = null;
      state.user.email = null;
      state.user.isConnected = false;
    },
  }
});


export const { updateUser, logout } = userSlice.actions;

export const userValue = (state: any) => state.user;

export default userSlice.reducer;
