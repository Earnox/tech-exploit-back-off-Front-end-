// navigation guard
// si je n'ai pas de context => redirection vers /

// Dans l'ordre
// Mise en place d'un contexte
// Fin de la connexion
// Mise en place de navigation guard
// CSS et amelioration de la syntaxe du code ;-)

import React, { useContext } from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import MainNav from './shared/MainNav';
import LoginPage from './auth/LoginPage';
import HomePage from './home/HomePage';
import GroupsPage from './groups/GroupsPage';
// import ProfilePage from './user/ProfilePage';
import ProfilePage from './user/ProfilePage';
import ProtectedElement from './shared/ProtectedRoute';
import UserCreationPage from './user/userCreationPage';
import UserManagement from './user/UserManagement';
import { useEffect, useState } from 'react';
import { get } from 'http';
import { UserContext, UserProvider } from './auth/userContext';
// navigation guard
// si je n'ai pas de context => redirection vers /

// Dans l'ordre
// Mise en place d'un contexte
// Fin de la connexion
// Mise en place de navigation guard
// CSS et amelioration de la syntaxe du code ;-)

/* Using React.FC to type the App component as a functional component without props */

// Quand tu veut dÃ©clarer une nouvelle route / link / redirection il faut la rentrer ici
const App: React.FC = () => {

  return (
    <UserProvider>
      <Router>
        <MainNav />
        <Routes>
          <Route path="/" element={<LoginPage />} />
          <Route
            path="/app"
            element={
              <ProtectedElement>
                <HomePage data={undefined} />
              </ProtectedElement>
            }
          />
          <Route
            path="/groups"
            element={
              <ProtectedElement>
                <GroupsPage />
              </ProtectedElement>
            }
          />
          <Route
            path="/UserManagement"
            element={
              <ProtectedElement>
                <UserManagement />
              </ProtectedElement>
            }
          />
          <Route path="*" element={<h1>Not Found</h1>} />
          <Route
            path="/profile"
            element={
              <ProtectedElement>
                <ProfilePage />
              </ProtectedElement>
            }
          />
          <Route
            path="/userCreationPage"
            element={
              <ProtectedElement>
                <UserCreationPage />
              </ProtectedElement>
            }
          />
        </Routes>
      </Router>
    </UserProvider>
  );
};

export default App;
