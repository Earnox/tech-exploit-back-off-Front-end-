import React, { useState } from 'react';
import Network from '../shared/Network';
import { Group } from '../../type';

// ModÃ¨les

interface GroupCreationPopupProps {
  onGroupCreated: (group: Group) => void;
  onClose: () => void;
}

// Composant
const GroupCreationPopup: React.FC<GroupCreationPopupProps> = ({
  onGroupCreated,
  onClose,
}) => {
  const [groupName, setGroupName] = useState<string>('');
  const API = new Network();

  const handleCreateGroup = async () => {
    try {
      //@ts-ignore
      const newGroup: Group = await API.post('/groups', { name: groupName });
      onGroupCreated(newGroup);
    } catch (error) {
      console.error('Error creating group:', error);
    }
  };

  return (
    <div className="fixed top-0 left-0 w-full h-full flex items-center justify-center bg-black bg-opacity-50">
      <div className="bg-white p-8 rounded-lg shadow-md w-1/2">
        <h2 className="text-2xl mb-4">Create New Group</h2>
        <input
          type="text"
          value={groupName}
          onChange={(e) => setGroupName(e.target.value)}
          placeholder="Group Name"
          className="border p-2 w-full mb-4 rounded"
        />
        <div className="flex justify-between">
          <button
            onClick={handleCreateGroup}
            className="bg-blue-500 text-white py-2 px-4 rounded">
            Create
          </button>
          <button
            onClick={() => {
              setGroupName('');
              onClose(); // Utilisez onClose ici pour fermer la popup
            }}
            className="text-blue-500 border-blue-500 border py-2 px-4 rounded">
            Cancel
          </button>
        </div>
      </div>
    </div>
  );
};

export default GroupCreationPopup;
