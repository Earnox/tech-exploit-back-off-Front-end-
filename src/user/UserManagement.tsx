import React, { useState, useEffect } from 'react';
import { FaEdit, FaTrash, FaSearch } from 'react-icons/fa';
import { User, ApiResponse } from '../type';
import { Link } from 'react-router-dom';
import Network from '../shared/Network';
import SearchTerm from '../shared/SearchTerm';
const UserManagement: React.FC = () => {
  const API = new Network();

  const [users, setUsers] = useState<User[]>([]);
  const [search, setSearch] = useState('');
  useEffect(() => {
    const fetchUsers = async () => {
      const fetchedUsers = await API.getAllUsers();
      const response = await fetchedUsers;

      setUsers(response.data as User[]);
      console.log('Users fetched:', response.data);
    };
    fetchUsers();
  }, []);

  const handleDelete = async (id: string) => {
    try {
      await API.deleteUser(id, {});
      setUsers(users.filter((user) => user.id !== id));
      console.log('User deleted:');
    } catch (error) {
      console.error('Error deleting user:', error);
    }
  };

  return (
    <div>
      <SearchTerm
        searchTermValue={search}
        setSearchTerm={(e: {
          target: { value: React.SetStateAction<string> };
        }) => setSearch(e.target.value)}
      />

      <Link to="/userCreationPage"> add user</Link>
      <table>
        <thead>
          <tr>
            <th>Nom</th>
            <th>Email</th>
            <th>Groupe</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          {users
            .filter(
              (user) =>
                user.name.includes(search) || user.email.includes(search)
            )
            .map((user) => (
              <tr key={user.id}>
                <td>{user.name}</td>
                <td>{user.email}</td>
                <td>{user.group?.name}</td>
                <td>
                  <button onClick={() => handleDelete(user.id)}>
                    <FaTrash />
                  </button>
                </td>
              </tr>
            ))}
        </tbody>
      </table>
    </div>
  );
};

export default UserManagement;
