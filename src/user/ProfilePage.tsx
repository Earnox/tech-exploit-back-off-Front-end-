import React, { useState, useEffect } from 'react';
import { FaUserEdit, FaKey, FaUserCircle, FaSave } from 'react-icons/fa';

import jwtDecode from 'jwt-decode';
import API from '../shared/Network';
import { DecodedToken } from '../type';
function PorfilePage() {
  const [name, setName] = useState<string>('');
  const [newPassword, setNewPassword] = useState<string>('');
  const [confirmPassword, setConfirmPassword] = useState<string>('');
  const [error, setError] = useState<string>('');

  useEffect(() => {
    const token = localStorage.getItem('jwt');
    if (token) {
      const decodedToken: DecodedToken = jwtDecode(token);
      if (decodedToken.name) {
        setName(decodedToken.name);
      }
    }
  }, []);

  const userId = jwtDecode<DecodedToken>(localStorage.getItem('jwt') || '').id;

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    if (newPassword !== confirmPassword) {
      setError('Passwords do not match');
      return;
    }

    try {
      const response = await API.post(`/users/user?id=${userId}`, {
        name: name,
        password: newPassword,
      });
      //@ts-ignore
      if (response.status === 200) {
        // Handle success
      } else {
        setError('Error updating profile');
      }
    } catch (error) {
      setError('Error updating profile');
    }
  };

  return (
    <div className="flex items-center justify-center h-screen">
      <div className="w-1/3 bg-white p-8 rounded shadow-lg">
        <div>
          <h1>Profile Page</h1>
          <form onSubmit={handleSubmit}>
            <div>
              <label className="block mb-2 font-bold flex items-center">
                <FaUserCircle className="mr-2" /> Name:
              </label>
              <input
                type="text"
                value={name}
                onChange={(e) => setName(e.target.value)}
              />
            </div>
            <div>
              <label className="block mb-2 font-bold flex items-center">
                <FaKey className="mr-2" /> New Password:
              </label>
              <input
                type="new-password"
                value={newPassword}
                onChange={(e) => setNewPassword(e.target.value)}
              />
            </div>
            <div>
              <label className="block mb-2 font-bold flex items-center">
                <FaKey className="mr-2" /> Confirm Password:
              </label>
              <input
                type="new-password"
                value={confirmPassword}
                onChange={(e) => setConfirmPassword(e.target.value)}
              />
            </div>
            <button
              type="submit"
              className="bg-indigo-500 text-white py-2 px-4 rounded hover:bg-indigo-600 mt-4">
              <FaSave className="mr-2" /> Update Profile
            </button>
          </form>
        </div>
      </div>
      {error && <p style={{ color: 'red' }}>{error}</p>}
    </div>
  );
}

export default PorfilePage;
