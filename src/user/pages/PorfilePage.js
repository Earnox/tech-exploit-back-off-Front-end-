import Network from '../../shared/utils/Network';
import React, { useState, useEffect } from 'react';
import jwtDecode from 'jwt-decode';
//

function Profile() {
  const [name, setName] = useState('');
  const [currentPassword, setCurrentPassword] = useState('');
  const [newPassword, setNewPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const [message, setMessage] = useState(null);

  useEffect(() => {
    // Decode JWT to get user details only once on component mount
    const token = localStorage.getItem('jwt');
    const decodedToken = jwtDecode(token);
    if (decodedToken.name) {
      setName(decodedToken.name);
    }
  }, []);
  const userId = jwtDecode(localStorage.getItem('jwt')).id;

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (newPassword !== confirmPassword) {
      setMessage('New password and confirmation do not match.');
      return;
    }

    // Call to API to update user details goes here.
    const API = new Network();
    try {
      const response = await API.updateUserProfile(userId, name, newPassword);
      if (response.name) {
        setMessage('Profile updated successfully!');
      } else {
        setMessage(response.message || 'Failed to update profile.');
      }
      console.log(response);
    } catch (error) {
      setMessage('Failed to update profile. Please try again.');
      console.log(error);
    }
  };

  return (
    <div className="p-4">
      <h1 className="text-2xl font-bold mb-4">Update Profile</h1>
      <form onSubmit={handleSubmit} className="space-y-4">
        <input
          className="text-xl p-2 border rounded w-full"
          type="text"
          value={name}
          placeholder="Name"
          onChange={(e) => setName(e.target.value)}
        />
        <input
          className="text-xl p-2 border rounded w-full"
          type="password"
          value={currentPassword}
          placeholder="Current Password"
          onChange={(e) => setCurrentPassword(e.target.value)}
        />
        <input
          className="text-xl p-2 border rounded w-full"
          type="password"
          value={newPassword}
          placeholder="New Password"
          onChange={(e) => setNewPassword(e.target.value)}
        />
        <input
          className="text-xl p-2 border rounded w-full"
          type="password"
          value={confirmPassword}
          placeholder="Confirm New Password"
          onChange={(e) => setConfirmPassword(e.target.value)}
        />
        <button type="submit" className="bg-blue-500 p-2 rounded text-white">
          Update Profile
        </button>
        {message && <p className="mt-4">{message}</p>}
      </form>
    </div>
  );
}

export default Profile;
