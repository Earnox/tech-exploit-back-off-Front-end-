import React, { useState, useEffect } from 'react';
import jwtDecode from 'jwt-decode';
import API from '../shared/Network';
import { User } from '../models/UserModel';

interface DecodedToken {
  id: string;
  name: string;
  [key: string]: any; // Pour couvrir d'autres propriétés potentielles du token
}

function PorfilePage() {
  const [name, setName] = useState<string>('');
  const [newPassword, setNewPassword] = useState<string>('');
  const [confirmPassword, setConfirmPassword] = useState<string>('');
  const [error, setError] = useState<string>('');

  useEffect(() => {
    const token = localStorage.getItem('jwt');
    if (token) {
      const decodedToken: DecodedToken = jwtDecode(token);
      if (decodedToken.name) {
        setName(decodedToken.name);
      }
    }
  }, []);

  const userId = jwtDecode<DecodedToken>(localStorage.getItem('jwt') || '').id;

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    if (newPassword !== confirmPassword) {
      setError('Passwords do not match');
      return;
    }

    try {
      const response = await API.post(`/users/user?id=${userId}`, {
        name: name,
        password: newPassword,
      });
      //@ts-ignore
      if (response.status === 200) {
        // Handle success
      } else {
        setError('Error updating profile');
      }
    } catch (error) {
      setError('Error updating profile');
    }
  };

  return (
    <div>
      <h1>Profile Page</h1>
      <form onSubmit={handleSubmit}>
        <div>
          <label>Name:</label>
          <input
            type="text"
            value={name}
            onChange={(e) => setName(e.target.value)}
          />
        </div>
        <div>
          <label>New Password:</label>
          <input
            type="password"
            value={newPassword}
            onChange={(e) => setNewPassword(e.target.value)}
          />
        </div>
        <div>
          <label>Confirm Password:</label>
          <input
            type="password"
            value={confirmPassword}
            onChange={(e) => setConfirmPassword(e.target.value)}
          />
        </div>
        <button type="submit">Update Profile</button>
      </form>
      {error && <p style={{ color: 'red' }}>{error}</p>}
    </div>
  );
}

export default PorfilePage;
